# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  webAppName: 'ado-sampleapp'
  serviceConnection: 'cnt'
  azureSubscriptionId: '7c71b563-0dc0-4bc0-bcf6-06f8f0516c7a'
  loadTestResource: 'sample-resource'
  loadTestResourceGroup: 'sample-test-rg'
  location: 'East US'


stages:
- stage: Build
  displayName: Build 
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: windows-latest

    steps:

    # - task: ArchiveFiles@2
    #   displayName: 'Archive files'
    #   inputs:
    #     rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    #     includeRootFolder: false
    #     archiveType: zip
    #     archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    #     replaceExistingArchive: true

    - publish: $(System.DefaultWorkingDirectory)
      artifact: drop

# - task: AzureResourceManagerTemplateDeployment@3
#   inputs:
#     deploymentScope: 'Resource Group'
#     azureResourceManagerConnection: 'cnt'
#     subscriptionId: '7c71b563-0dc0-4bc0-bcf6-06f8f0516c7a'
#     action: 'Create Or Update Resource Group'
#     resourceGroupName: 'template-alt-rg'
#     location: 'East US'
#     templateLocation: 'Linked artifact'
#     csmFile: '$(System.DefaultWorkingDirectory)/ARMTemplates/template.json'
#     csmParametersFile: '$(System.DefaultWorkingDirectory)/ARMTemplates/parameters.json'
#     deploymentMode: 'Incremental'
#     deploymentOutputs: 'output'